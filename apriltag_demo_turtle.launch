<?xml version="1.0"?>
<launch>
  <!-- simple demo of apriltag_marker objects in rviz and Gazebo.
  -->
  <!-- apriltag variables -->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0" />

  <!-- turtlebot variables -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>

  <arg name="x_pos" default="0.5"/>
  <arg name="y_pos" default="0.5"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="yaw"   default=" 1.57"/>

<!-- specifying pos for 2nd turtlebot -->
  <arg name="second_tb3_x_pos" default="0.5"/>
  <arg name="second_tb3_y_pos" default="-0.5"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 1.57"/>
  
  <!-- doesn't work anymore <arg name="world_name" default="$(find gazebo_ros)/worlds/empty.world" /> -->
  <arg name="world_name" default="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world" />
  <!-- <arg name="world_name" default="worlds/empty.world" /> -->


  <!-- upload the robot xacro/urdf to the param server -->
  <param name="robot_description" 
         command="$(find xacro)/xacro --inorder $(find tams_apriltags)/urdf/apriltag_demo2.xacro" />



  <!-- start gazebo server:  gzserver/debug-->
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" respawn="false" output="screen"
        args="$(arg world_name)" />


  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>



  <!-- spawn the robot at xzy=(-1,0,0) -->
  <node name="spawn_apriltag_demo" pkg="gazebo_ros" type="spawn_model" 
        args="-urdf -param robot_description -x 3 -y 3 -z 0 -R 90 -P 0 -Y 1.57 -model apriltags" 
        respawn="false" output="screen" />


  <!-- publish world transform to tf -->
  <node pkg="tf" type="static_transform_publisher" 
        name="static_map_tf_publisher" args="0 0 0 0 0 0 world map 100" />


 <!-- publishes robot-state, reading the urdf robot model from "doro_description",
       subscribing to /joint_states and publishing to /tf -->
  <node pkg="robot_state_publisher" type="state_publisher" respawn="false"
        name="doro_state_publisher">
     <param name="publish_frequency" type="double" value="100.0" />
     <param name="tf_prefix" type="string" value="" />
     <param name="robot_description" command="$(find xacro)/xacro --inorder $(find tams_apriltags)/urdf/apriltag_marker.xacro" />  
     <remap from="joint_states" to="doro/joint_states" />
 </node>

<!-- spawning turtlebot, adding "2" after (arg model) to use test turtlebot xacro file-->
  <group ns = "$(arg first_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model)2.urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>
    
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -param robot_description" />
  </group>

<!-- spawning 2nd turtlebot -->
  <group ns = "$(arg second_tb3)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />
  </group>



</launch>
